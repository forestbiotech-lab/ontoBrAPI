extends layout

block content
  .container-fluid
    .row
      .col-8#app
        .card.bg-light
          .card-header
            h5 Upload
          .card-body
            p Upload a file to map and convert to N-Triples (NT)
            .form-group
              .pocket-progress
              label.sr-only(for="augment-file") Upload file
              input(hidden,type="file",id="augment-file",placeholder="tsv file",required="",autofocus="",autocomplete="off",name="uploads[]", accept="mime/*,.tsv,.xlsx",study-id=study_id)
            button.btn.btn-success.btn-block.upload-augment-file(type="button")
              span.glyphicon.glyphicon-floppy-open
              | &nbsp;upload file
            .preview-table#preview-table.d-none
              worksheet-tabs
              button.btn.btn-success.btn-block.generate-nt
                |Generate N-Triples (NT)
              textarea(cols="120",rows="10").d-none
        #template.d-none
        #mapping.d-none
          #mapping-column
            .card
              .card-header
                h3 Mapping
                  button.btn.btn-success(v-on:click="downloadMapping" style="float:right;") Download Mapping
                  button.btn.btn-success(type='button' data-toggle='collapse' data-target='#loadingPanel' aria-expanded='false' aria-controls='loadingPanel' style="float:right;") Load Mapping
                #loadingPanel.collapse
                  .card.card-body
                    textarea(style="font-size: x-small;" col="120",rows="10" v-model="uploadedJSON")
                    button.btn.btn-sm.btn-info(v-on:click="loadJSON") load
              .card-body
                .form-group
                  label(for="column-selection") Column selection
                  v-select(:options="columns",v-model="column",id="column-selection" )
                    template(v-slot:option="option")
                      | {{ option.label }} &nbsp;
                      span.badge.badge-success
                        i.bi-check-lg
              mapping-form(:form-options="formOptions" :selection="selection",:worksheet="worksheet",:column="column",:named-individuals="namedIndividuals")
          #mapping-select
            .card-body(v-if="column != ''")
              simple-select(:label="'type'" :worksheet="worksheet" :column="column" :form-options="formOptions" :selection="selection")
              simple-property-select(:label="'name'" :term-type="'Class'" :worksheet="worksheet" :column="column" :form-options="formOptions" :selection="selection" v-if="selection[worksheet][column].type.name === 'class'")
              simple-property-select(:label="'name'" :term-type="'DataProperty'" :worksheet="worksheet" :column="column" :form-options="formOptions" :selection="selection" v-if="selection[worksheet][column].type.name === 'dataProperty'")
              simple-property-select(:label="'name'" :term-type="'ObjectProperty'" :worksheet="worksheet" :column="column" :form-options="formOptions" :selection="selection" v-if="selection[worksheet][column].type.name === 'objectProperty'")
              simple-select(:label="'valueType'" :worksheet="worksheet" :column="column" :form-options="formOptions" :selection="selection")
              .form-group(v-bind:input='label = "naming_scheme"')
                label(v-bind:for="label") {{ getDisplayLabel }}
                p(v-html="displayTextWithBadges")
                input.form-control(:id="label" type="text" title="How to call the indivual generated by this" v_bind:name="label" v-model="selection[worksheet][column].naming_scheme")
                .form-group
                  button.btn.btn-info(v-on:click="setAutoIncrement()" ) auto increment
                  button.btn.btn-info(v-on:click="setValueAttribute()") value
                  label(for="refSelector") Reference a Column
                  v-select#refSelector(:options="namedIndividuals",@input="setReferenceAttribute")
              .card(v-if="selection[worksheet][column].type.name === 'class'")
                .card-header
                  h4 Properties
                .card-body.objectProperties
                  button.btn.btn-block.btn-secondary(v-on:click="addPropertyForm('objectProperties')") Add Object Properties
                  .o-properties-wrapper
                    .card
                      .card-body(v-for="objectPropertyForm in selection[worksheet][column].objectProperties")
                        .visbility-wrapper(v-if=" objectPropertyForm.show == true ")
                          property-select(:label="'objectProperty'" :term-type="'ObjectProperty'" :property-type="'objectProperties'" :selection="selection" :form-options="formOptions" :worksheet="worksheet" :column="column" :data-property-form="objectPropertyForm")
                          .form-group
                            label Individuals
                            v-select(:options="namedIndividuals",v-model="selection[worksheet][column].objectProperties[objectPropertyForm.id].refenceNode")
                            button.btn.btn-danger.btn-block(v-on:click="removeProperty(objectPropertyForm.id,'objectProperties')") remove property

                .card-body.dataProperties
                  button.btn.btn-block.btn-secondary(v-on:click="addPropertyForm('dataProperties')") Add data Properties
                  .d-properties-wrapper
                  #mapping-properties.d-none
                  .card
                    .card-body(v-for="dataPropertyForm in selection[worksheet][column].dataProperties")
                      .visbility-wrapper(v-if=" dataPropertyForm.show == true ")
                        property-select(:label="'dataProperty'" :term-type="'DataProperty'" :property-type="'dataProperties'" :selection="selection" :form-options="formOptions" :worksheet="worksheet" :column="column" :data-property-form="dataPropertyForm")
                        .form-group
                          label Value
                          input.form-control(type="text",v-model="selection[worksheet][column].dataProperties[dataPropertyForm.id].data.value")
                          button.btn.btn-info(v-on:click="setValueAttribute()") Cell value
                          button.btn.btn-info Data format from cell??
                          label type
                          v-select(:options='["xsd:integer","xsd:string","xsd:float","xsd:dateTime"]',v-model="selection[worksheet][column].dataProperties[dataPropertyForm.id].data.type")
                          button.btn.btn-danger.btn-block(v-on:click="removeProperty(dataPropertyForm.id,'dataProperties')") remove property

        #mapping-example.d-none
          #template-property-select
            .form-group
              label(v-bind:for='label') {{ getDisplayLabel }}
              v-select(:options="formOptions['name'][termType]" v-bind:id="label" v-model="selection[worksheet][column][propertyType][dataPropertyForm.id].property")
          #template-simple-property-select
            .form-group
              label(v-bind:for="label") {{ getDisplayLabel }}
              v-select(:options='formOptions[label][termType]' v-bind:id="label", v-model="selection[worksheet][column][label]" )
          #template-simple-select
            .form-group
              label(v-bind:for="label") {{ getDisplayLabel }}
              v-select(:options='formOptions[label]' v-bind:id="label", v-model="selection[worksheet][column][label]" )
      .col-4
        .card.bg-light.menu
          .card-header
            h5 BrAPI call editor
          .card-body
            a.btn.btn-success.btn-block(href="/callEditor/listmodules") List Modules
            a.btn.btn-success.btn-block(href="/callEditor/") Observation call
        .card.bg-light.ontology-terms
          .card-header
            h5 Rdf Syntax Type
          .card-body#accordian-rdf-type
            .spinner-border(role='status')
            span.align-self-center &nbsp;Loading terms...
